#!/usr/bin/python2
# -*- coding: utf-8; tab-width: 4; indent-tabs-mode: t -*-

import os
import sys
import argparse
from datetime import datetime
sys.path.append('/usr/lib/config-sync')
from vcc_param import VccParam

def getArgParser():
	parser = argparse.ArgumentParser()
	subparsers = parser.add_subparsers()

	parserStatus = subparsers.add_parser('status', help='Show status')
	parserStatus.set_defaults(op="status")

	parserPause = subparsers.add_parser('pause', help='Pause synchronization so that you can compare and edit configurations')
	parserPause.set_defaults(op="pause")

	parserTrigger = subparsers.add_parser('trigger', help='Trigger synchronization manually')
	parserTrigger.set_defaults(op="trigger")

	return parser

###############################################################################

param = VccParam()
args = getArgParser().parse_args()

if args.op == "status":
	pass
elif args.op == "pause":
	userLockFile = os.path.join(self.param.dataDir, "userlock")
	try:
		with open(userLockFile, "w") as f:
			pass
	finally:
		os.unlink(userLockFile)
elif args.op == "trigger":
	pass
else:
	raise Exception("Invalid sub command")
